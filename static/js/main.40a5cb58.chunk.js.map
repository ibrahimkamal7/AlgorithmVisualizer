{"version":3,"sources":["Algorithms/SortingAlgorithms/QuickSort.js","Algorithms/SortingAlgorithms/MergeSort.js","Algorithms/SortingAlgorithms/HeapSort.js","Visualizer/SortingVisualizer.jsx","Algorithms/SortingAlgorithms/BubbleSort.js","Endpoints/SortingAlgoritmVisualizer.jsx","Visualizer/SearchingVisualizer.jsx","Algorithms/SearchingAlgorithms/LinearSearch.js","Algorithms/SearchingAlgorithms/BinarySearch.js","Endpoints/SearchingAlgorithmVisualizer.jsx","Endpoints/index.jsx","Endpoints/error.jsx","App.js","serviceWorker.js","index.js"],"names":["getQuickSortAnimations","array","animations","doQuickSort","start","end","pivotIdx","pivotValue","lower","run","push","temp","partition","length","getMergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","doMerge","getHeapSortAnimations","heap","swap","doHeapSort","index","left","right","max","first","last","SortingVisualizer","props","state","initialArray","initialArray1","initialArray2","count","initialColor","compareColor","sortedColor","speed","changeSize","bind","document","getElementById","value","this","createNewArray","min","random","setState","arrayBars","getElementsByClassName","arrayBars1","arrayBars2","style","backgroundColor","innerHTML","disabled","checked","inputElements","notChecked","inputElement","e","target","arrayPosition","enableButtons","disableButtons","animationsArray","doBubbleSort","getBubbleSortAnimations","barOne","barTwo","color","setTimeout","height","areSorted","array1","array2","array3","sortedArray1","sort","a","b","sortedArray2","sortedArray3","id","alert","isSorted","indexOf","bubbleSort","mergeSort","quickSort","heapSort","className","onClick","htmlFor","type","onChange","change","go","map","idx","key","width","display","margin","React","Component","SortingAlgorithmVisualizer","SearchingVisualizer","comparisonColor","foundColor","number","getLinearSearchAnimations","parseInt","x","z","animations1","mid","getBinarySearchAnimations","y","arrayBarsValue","linearSearch","binarySearch","textAlign","marginTop","name","placeholder","SearchingAlgorithmVisualizer","MainPage","href","fontSize","to","Error","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40a5cb58.chunk.js","sourcesContent":["export function getQuickSortAnimations(array) {\n  const animations = [];\n  let start = 0;\n  let end = array.length - 1;\n  doQuickSort(array, start, end, animations);\n  return animations;\n}\n\nfunction doQuickSort(array, start, end, animations) {\n  if (start >= end) {\n    return;\n  }\n  let pivotIdx = partition(array, start, end, animations);\n  doQuickSort(array, start, pivotIdx - 1, animations);\n  doQuickSort(array, pivotIdx + 1, end, animations);\n}\n\nfunction partition(array, start, end, animations) {\n  let pivotValue = array[start];\n  let lower = start + 1;\n  let run = true;\n  while (run) {\n    while (array[lower] <= pivotValue && lower <= end) {\n      animations.push([start, lower]);\n      animations.push([start, lower]);\n      animations.push([0, array[0]]);\n      animations.push([0, array[0]]);\n      lower += 1;\n    }\n    while (array[end] >= pivotValue && lower <= end) {\n      animations.push([start, end]);\n      animations.push([start, end]);\n      animations.push([0, array[0]]);\n      animations.push([0, array[0]]);\n      end -= 1;\n    }\n    if (end < lower) {\n      run = false;\n    } else {\n      animations.push([lower, end]);\n      animations.push([lower, end]);\n      animations.push([lower, array[end]]);\n      animations.push([end, array[lower]]);\n      let temp = array[lower];\n      array[lower] = array[end];\n      array[end] = temp;\n    }\n  }\n  animations.push([start, end]);\n  animations.push([start, end]);\n  animations.push([start, array[end]]);\n  animations.push([end, pivotValue]);\n  let temp = array[end];\n  array[end] = pivotValue;\n  array[start] = temp;\n  return end;\n}\n","export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","export function getHeapSortAnimations(array) {\n  const animations = [];\n  doHeapSort(array, animations);\n  return animations;\n}\n\nfunction doHeapSort(array, animations) {\n  var length = array.length;\n  for (var i = Math.floor(length / 2); i >= 0; i--) {\n    heap(array, i, length, animations);\n  }\n\n  for (i = length - 1; i > 0; i--) {\n    swap(array, 0, i, animations);\n    length--;\n    heap(array, 0, length, animations);\n  }\n}\n\nfunction heap(array, index, length, animations) {\n  var left = 2 * index + 1;\n  var right = 2 * index + 2;\n  var max = index;\n  if (left < length && array[left] > array[max]) {\n    animations.push([left, max]);\n    animations.push([left, max]);\n    animations.push([0, array[0]]);\n    animations.push([0, array[0]]);\n    max = left;\n  }\n  if (right < length && array[right] > array[max]) {\n    animations.push([right, max]);\n    animations.push([right, max]);\n    animations.push([0, array[0]]);\n    animations.push([0, array[0]]);\n    max = right;\n  }\n  if (max !== index) {\n    swap(array, index, max, animations);\n    heap(array, max, length, animations);\n  }\n}\n\nfunction swap(array, first, last, animations) {\n  animations.push([first, last]);\n  animations.push([first, last]);\n  animations.push([first, array[last]]);\n  animations.push([last, array[first]]);\n  var temp = array[first];\n  array[first] = array[last];\n  array[last] = temp;\n}\n","import React from \"react\";\nimport \"../styles/SortingVisualizer.css\";\nimport { getBubbleSortAnimations } from \"../Algorithms/SortingAlgorithms/BubbleSort.js\";\nimport { getQuickSortAnimations } from \"../Algorithms/SortingAlgorithms/QuickSort.js\";\nimport { getMergeSortAnimations } from \"../Algorithms/SortingAlgorithms/MergeSort.js\";\nimport { getHeapSortAnimations } from \"../Algorithms/SortingAlgorithms/HeapSort.js\";\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialArray: [],\n      initialArray1: [],\n      initialArray2: [],\n      count: 0,\n      initialColor: \"teal\",\n      compareColor: \"salmon\",\n      sortedColor: \"turquoise\",\n      speed: 5,\n      length: 38,\n    };\n    this.changeSize = this.changeSize.bind(this);\n  }\n\n  componentDidMount() {\n    document.getElementById(\"length\").value = 38;\n    this.createNewArray();\n  }\n\n  createNewArray() {\n    const initialArray = [];\n    const initialArray1 = [];\n    const initialArray2 = [];\n    for (let i = 0; i < this.state.length; i++) {\n      const value = randomIntFromInterval(5, 400);\n      initialArray.push(value);\n      initialArray1.push(value);\n      initialArray2.push(value);\n    }\n    this.setState({ initialArray, initialArray1, initialArray2 });\n    var arrayBars = document.getElementsByClassName(\"bars\");\n    var arrayBars1 = document.getElementsByClassName(\"bars1\");\n    var arrayBars2 = document.getElementsByClassName(\"bars2\");\n    for (var i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.backgroundColor = this.state.initialColor;\n      arrayBars1[i].style.backgroundColor = this.state.initialColor;\n      arrayBars2[i].style.backgroundColor = this.state.initialColor;\n    }\n    this.state.count = 0;\n\n    document.getElementById(\"infoContainer0\").innerHTML =\n      \"Array 1; Size: \" + this.state.length;\n    document.getElementById(\"infoContainer1\").innerHTML =\n      \"Array 2; Size: \" + this.state.length;\n    document.getElementById(\"infoContainer2\").innerHTML =\n      \"Array 3; Size: \" + this.state.length;\n  }\n\n  disableButtons() {\n    document.getElementById(\"generate\").disabled = true;\n    document.getElementById(\"go\").disabled = true;\n    document.getElementById(\"quick\").disabled = true;\n    document.getElementById(\"heap\").disabled = true;\n    document.getElementById(\"merge\").disabled = true;\n    document.getElementById(\"bubble\").disabled = true;\n    document.getElementById(\"length\").disabled = true;\n  }\n\n  enableButtons() {\n    document.getElementById(\"generate\").disabled = false;\n    document.getElementById(\"go\").disabled = false;\n    document.getElementById(\"length\").disabled = false;\n    if (document.getElementById(\"quick\").checked)\n      document.getElementById(\"quick\").disabled = false;\n    if (document.getElementById(\"heap\").checked)\n      document.getElementById(\"heap\").disabled = false;\n    if (document.getElementById(\"merge\").checked)\n      document.getElementById(\"merge\").disabled = false;\n    if (document.getElementById(\"bubble\").checked)\n      document.getElementById(\"bubble\").disabled = false;\n  }\n\n  change() {\n    const inputElements = document.getElementsByClassName(\"checkboxes\");\n    var checked = [];\n    var notChecked = [];\n    var disabled = [];\n    if (inputElements !== null) {\n      for (var i = 0; i < inputElements.length; i++) {\n        var inputElement = inputElements[i];\n        if (inputElement.checked) checked.push(inputElement);\n        else notChecked.push(inputElement);\n        if (inputElement.disabled) disabled.push(inputElement);\n      }\n      if (checked.length === 3) {\n        for (var j = 0; j < notChecked.length; j++) {\n          notChecked[j].disabled = true;\n        }\n      }\n      if (checked.length <= 3) {\n        for (var k = 0; k < disabled.length; k++) {\n          disabled[k].disabled = false;\n        }\n      }\n    }\n  }\n\n  changeSize(e) {\n    this.state.length = e.target.value;\n    this.createNewArray();\n  }\n\n  areSorted(arrayPosition) {\n    const value = arrayPosition === 0 ? \"\" : arrayPosition;\n    var arrayBars = document.getElementsByClassName(\"bars\" + value);\n    for (var i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.backgroundColor = this.state.sortedColor;\n    }\n    this.state.count = this.state.count + 1;\n    if (this.state.count === 3) {\n      this.enableButtons();\n    }\n  }\n\n  bubbleSort(arrayPosition) {\n    this.disableButtons();\n    const allArrays = [\n      this.state.initialArray,\n      this.state.initialArray1,\n      this.state.initialArray2,\n    ];\n    const allArrayBars = [\"bars\", \"bars1\", \"bars2\"];\n    var array = allArrays[arrayPosition];\n    var arrayBars = document.getElementsByClassName(\n      allArrayBars[arrayPosition]\n    );\n    const animations = getBubbleSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color =\n          i % 4 === 0 ? this.state.compareColor : this.state.initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * this.state.speed);\n      } else {\n        const [barOne, height] = animations[i];\n        setTimeout(() => {\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            this.areSorted(arrayPosition);\n          }\n        }, i * this.state.speed);\n      }\n    }\n  }\n\n  heapSort(arrayPosition) {\n    const allArrays = [\n      this.state.initialArray,\n      this.state.initialArray1,\n      this.state.initialArray2,\n    ];\n    const allArrayBars = [\"bars\", \"bars1\", \"bars2\"];\n    var array = allArrays[arrayPosition];\n    var arrayBars = document.getElementsByClassName(\n      allArrayBars[arrayPosition]\n    );\n    const animations = getHeapSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color =\n          i % 4 === 0 ? this.state.compareColor : this.state.initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * this.state.speed);\n      } else {\n        setTimeout(() => {\n          const [barOne, height] = animations[i];\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            this.areSorted(arrayPosition);\n          }\n        }, i * this.state.speed);\n      }\n    }\n  }\n\n  mergeSort(arrayPosition) {\n    this.disableButtons();\n    const allArrays = [\n      this.state.initialArray,\n      this.state.initialArray1,\n      this.state.initialArray2,\n    ];\n    const allArrayBars = [\"bars\", \"bars1\", \"bars2\"];\n    var array = allArrays[arrayPosition];\n    var arrayBars = document.getElementsByClassName(\n      allArrayBars[arrayPosition]\n    );\n    const animations = getMergeSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 3 !== 2;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color =\n          i % 3 === 0 ? this.state.compareColor : this.state.initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * this.state.speed);\n      } else {\n        setTimeout(() => {\n          const [barOne, height] = animations[i];\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            this.areSorted(arrayPosition);\n          }\n        }, i * this.state.speed);\n      }\n    }\n  }\n\n  quickSort(arrayPosition) {\n    const allArrays = [\n      this.state.initialArray,\n      this.state.initialArray1,\n      this.state.initialArray2,\n    ];\n    const allArrayBars = [\"bars\", \"bars1\", \"bars2\"];\n    var array = allArrays[arrayPosition];\n    var arrayBars = document.getElementsByClassName(\n      allArrayBars[arrayPosition]\n    );\n    const animations = getQuickSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color =\n          i % 4 === 0 ? this.state.compareColor : this.state.initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * this.state.speed);\n      } else {\n        setTimeout(() => {\n          const [barOne, height] = animations[i];\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            this.areSorted(arrayPosition);\n          }\n        }, i * this.state.speed);\n      }\n    }\n  }\n\n  isSorted(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (let i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  go() {\n    const inputElements = document.getElementsByClassName(\"checkboxes\");\n    const array1 = this.state.initialArray;\n    const array2 = this.state.initialArray1;\n    const array3 = this.state.initialArray2;\n    const sortedArray1 = array1.slice().sort((a, b) => a - b);\n    const sortedArray2 = array2.slice().sort((a, b) => a - b);\n    const sortedArray3 = array3.slice().sort((a, b) => a - b);\n    var checked = [];\n    if (inputElements !== null) {\n      for (var i = 0; i < inputElements.length; i++) {\n        var inputElement = inputElements[i];\n        if (inputElement.checked) {\n          checked.push(inputElement.id);\n        }\n      }\n    }\n    if (checked.length < 3) {\n      alert(\"Please select 3 sorting algorithms\");\n    } else {\n      if (\n        this.isSorted(this.state.initialArray, sortedArray1) ||\n        this.isSorted(this.state.initialArray1, sortedArray2) ||\n        this.isSorted(this.state.initialArray2, sortedArray3)\n      ) {\n        alert(\"Arrays are sorted. Generate a new and try again.\");\n      } else {\n        if (checked.indexOf(\"bubble\") >= 0) {\n          this.bubbleSort(checked.indexOf(\"bubble\"));\n          document.getElementById(\n            \"infoContainer\" + checked.indexOf(\"bubble\")\n          ).innerHTML = \"Sorting using Bubble Sort\";\n        }\n\n        if (checked.indexOf(\"merge\") >= 0) {\n          this.mergeSort(checked.indexOf(\"merge\"));\n          document.getElementById(\n            \"infoContainer\" + checked.indexOf(\"merge\")\n          ).innerHTML = \"Sorting using Merge Sort\";\n        }\n\n        if (checked.indexOf(\"quick\") >= 0) {\n          this.quickSort(checked.indexOf(\"quick\"));\n          document.getElementById(\n            \"infoContainer\" + checked.indexOf(\"quick\")\n          ).innerHTML = \"Sorting using Quick Sort\";\n        }\n\n        if (checked.indexOf(\"heap\") >= 0) {\n          this.heapSort(checked.indexOf(\"heap\"));\n          document.getElementById(\n            \"infoContainer\" + checked.indexOf(\"heap\")\n          ).innerHTML = \"Sorting using Heap Sort\";\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <button id='generate' onClick={() => this.createNewArray()}>\n            Generate New Array\n          </button>\n          <label htmlFor='size'>Size: </label>\n          <input\n            type='range'\n            min='10'\n            max='38'\n            id='length'\n            onChange={this.changeSize}\n          ></input>\n          <input\n            className='checkboxes'\n            id='merge'\n            type='checkbox'\n            onChange={this.change}\n          ></input>\n          <label htmlFor='merge' className='label'>\n            Merge Sort\n          </label>\n          <input\n            className='checkboxes'\n            id='quick'\n            type='checkbox'\n            onChange={this.change}\n          ></input>\n          <label htmlFor='quick' className='label'>\n            Quick Sort\n          </label>\n          <input\n            className='checkboxes'\n            id='heap'\n            type='checkbox'\n            onChange={this.change}\n          ></input>\n          <label htmlFor='heap' className='label'>\n            Heap Sort\n          </label>\n          <input\n            className='checkboxes'\n            id='bubble'\n            type='checkbox'\n            onChange={this.change}\n          ></input>\n          <label htmlFor='bubble' className='label'>\n            Bubble Sort\n          </label>\n          <button id='go' onClick={() => this.go()}>\n            Visualize Algorithms\n          </button>\n        </div>\n        <div className='info'>\n          <p id='infoContainer0'>Array 1</p>\n          <p id='infoContainer1'>Array 2</p>\n          <p id='infoContainer2'>Array 3</p>\n        </div>\n        <div id='bigcontainer'>\n          <div className='container'>\n            {this.state.initialArray.map((value, idx) => (\n              <div\n                className='bars'\n                id={value}\n                key={idx}\n                style={{\n                  backgroundColor: this.state.initialColor,\n                  height: `${value}px`,\n                  width: \"10px\",\n                  display: \"inline-block\",\n                  margin: \"0 1px\",\n                }}\n              ></div>\n            ))}\n          </div>\n\n          <div className='container1'>\n            {this.state.initialArray1.map((value, idx) => (\n              <div\n                className='bars1'\n                id={value}\n                key={idx}\n                style={{\n                  backgroundColor: this.state.initialColor,\n                  height: `${value}px`,\n                  width: \"10px\",\n                  display: \"inline-block\",\n                  margin: \"0 1px\",\n                }}\n              ></div>\n            ))}\n          </div>\n\n          <div className='container2'>\n            {this.state.initialArray2.map((value, idx) => (\n              <div\n                className='bars2'\n                id={value}\n                key={idx}\n                style={{\n                  backgroundColor: this.state.initialColor,\n                  height: `${value}px`,\n                  width: \"10px\",\n                  display: \"inline-block\",\n                  margin: \"0 1px\",\n                }}\n              ></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getBubbleSortAnimations(array) {\n  const animationsArray = [];\n  doBubbleSort(array, animationsArray);\n  return animationsArray;\n}\n\nfunction doBubbleSort(array, animationsArray) {\n  let end = array.length - 1;\n  while (end >= 1) {\n    for (let j = 0; j < end; j++) {\n      if (array[j] > array[j + 1]) {\n        animationsArray.push([j, j + 1]);\n        animationsArray.push([j, j + 1]);\n        animationsArray.push([j, array[j + 1]]);\n        animationsArray.push([j + 1, array[j]]);\n        let temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n    end--;\n  }\n}\n","import React, { Component } from \"react\";\nimport SortingVisualizer from \"../Visualizer/SortingVisualizer\";\n\nclass SortingAlgorithmVisualizer extends Component {\n  render() {\n    return <SortingVisualizer />;\n  }\n}\n\nexport default SortingAlgorithmVisualizer;\n","import React from \"react\";\nimport { getLinearSearchAnimations } from \"../Algorithms/SearchingAlgorithms/LinearSearch.js\";\nimport { getBinarySearchAnimations } from \"../Algorithms/SearchingAlgorithms/BinarySearch.js\";\nimport \"../styles/SearchingVisualizer.css\";\nexport default class SearchingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialArray: [],\n      length: 15,\n      initialColor: \"teal\",\n      comparisonColor: \"salmon\",\n      foundColor: \"turquoise\",\n      speed: 500,\n    };\n  }\n\n  componentDidMount() {\n    document.getElementById(\"size\").value = \"15\";\n    this.createNewArray();\n  }\n\n  disableButtons() {\n    document.getElementById(\"generate\").disabled = true;\n    document.getElementById(\"LinearSearch\").disabled = true;\n    document.getElementById(\"BinarySearch\").disabled = true;\n    document.getElementById(\"number\").disabled = true;\n    document.getElementById(\"size\").disabled = true;\n  }\n\n  enableButtons() {\n    document.getElementById(\"generate\").disabled = false;\n    document.getElementById(\"LinearSearch\").disabled = false;\n    document.getElementById(\"BinarySearch\").disabled = false;\n    document.getElementById(\"number\").disabled = false;\n    document.getElementById(\"size\").disabled = false;\n  }\n\n  createNewArray() {\n    const initialArray = [];\n    for (let i = 0; i < this.state.length; i++) {\n      const value = randomIntFromInterval(5, 400);\n      initialArray.push(value);\n    }\n    this.setState({ initialArray });\n    var arrayBars = document.getElementsByClassName(\"bars\");\n    for (var i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.backgroundColor = this.state.initialColor;\n    }\n    document.getElementById(\"info\").innerHTML = \"\";\n  }\n\n  linearSearch() {\n    const number = document.getElementById(\"number\").value;\n    if (number === \"\") {\n      alert(\"Please enter a number to be searched\");\n    } else {\n      this.disableButtons();\n      document.getElementById(\"info\").innerHTML = \"\";\n      const arrayBars = document.getElementsByClassName(\"bars\");\n      for (var i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = this.state.initialColor;\n      }\n      const animations = getLinearSearchAnimations(\n        this.state.initialArray,\n        parseInt(number)\n      );\n      for (let i = 0; i < animations.length; i++) {\n        const [idx, found] = animations[i];\n        if (found) {\n          setTimeout(() => {\n            for (var x = 0; x < arrayBars.length; x++) {\n              if (x !== idx)\n                arrayBars[x].style.backgroundColor = this.state.initialColor;\n            }\n            arrayBars[idx].style.backgroundColor = this.state.foundColor;\n            document.getElementById(\"info\").innerHTML =\n              \"Entered number found at index \" + i;\n            this.enableButtons();\n          }, i * this.state.speed);\n          break;\n        } else {\n          setTimeout(() => {\n            arrayBars[idx].style.backgroundColor = this.state.comparisonColor;\n            if (i === animations.length - 1) {\n              for (var z = 0; z < arrayBars.length; z++) {\n                arrayBars[z].style.backgroundColor = this.state.initialColor;\n              }\n              document.getElementById(\"info\").innerHTML =\n                \"Entered number not found in the array\";\n              this.enableButtons();\n            }\n          }, i * this.state.speed);\n        }\n      }\n    }\n  }\n\n  binarySearch() {\n    const number = document.getElementById(\"number\").value;\n    if (number === \"\") {\n      alert(\"Please enter a number to be searched\");\n    } else {\n      this.sort();\n      this.disableButtons();\n      document.getElementById(\"info\").innerHTML = \"\";\n      const arrayBars = document.getElementsByClassName(\"bars\");\n      for (var i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = this.state.initialColor;\n      }\n      const animations = getBinarySearchAnimations(\n        this.state.initialArray,\n        parseInt(number)\n      );\n      for (let i = 0; i < animations.length; i++) {\n        const [idx, found] = animations[i];\n        if (found) {\n          setTimeout(() => {\n            for (var x = 0; x < arrayBars.length; x++) {\n              if (x !== idx)\n                arrayBars[x].style.backgroundColor = this.state.initialColor;\n            }\n            arrayBars[idx].style.backgroundColor = this.state.foundColor;\n            document.getElementById(\"info\").innerHTML =\n              \"Entered number found at index \" + idx;\n            this.enableButtons();\n          }, i * this.state.speed);\n          break;\n        } else {\n          setTimeout(() => {\n            arrayBars[idx].style.backgroundColor = this.state.comparisonColor;\n            if (i === animations.length - 1) {\n              for (var y = 0; y < arrayBars.length; y++) {\n                arrayBars[y].style.backgroundColor = this.state.initialColor;\n              }\n              document.getElementById(\"info\").innerHTML =\n                \"Entered number not found in the array\";\n              this.enableButtons();\n            }\n          }, i * this.state.speed);\n        }\n      }\n    }\n  }\n\n  sort() {\n    const arrayBarsValue = document.getElementsByClassName(\"value\");\n    for (var i = 0; i < this.state.initialArray.length; i++) {\n      for (var j = 0; j < this.state.initialArray.length - i - 1; j++) {\n        if (this.state.initialArray[j] > this.state.initialArray[j + 1]) {\n          var temp = this.state.initialArray[j];\n          this.state.initialArray[j] = this.state.initialArray[j + 1];\n          this.state.initialArray[j + 1] = temp;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.state.initialArray.length; k++) {\n      arrayBarsValue[k].innerHTML = this.state.initialArray[k];\n    }\n  }\n\n  change = (e) => {\n    this.state.length = e.target.value;\n    this.createNewArray();\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <button id='generate' onClick={() => this.createNewArray()}>\n            Generate New Array\n          </button>\n          <label htmlFor='size'>Size: </label>\n          <input\n            type='range'\n            min='10'\n            max='25'\n            id='size'\n            onChange={this.change}\n          ></input>\n          <button id='LinearSearch' onClick={() => this.linearSearch()}>\n            Linear Search\n          </button>\n          <button id='BinarySearch' onClick={() => this.binarySearch()}>\n            Binary Search\n          </button>\n        </div>\n        <div className='containers'>\n          {this.state.initialArray.map((value, idx) => (\n            <div\n              className='bars'\n              id={value}\n              key={idx}\n              style={{\n                backgroundColor: \"teal\",\n                color: \"white\",\n                height: \"50px\",\n                width: \"50px\",\n                display: \"inline-block\",\n                margin: \"0 1px\",\n                textAlign: \"center\",\n              }}\n            >\n              <p className='value' style={{ marginTop: \"15px\" }}>\n                {value}\n              </p>\n            </div>\n          ))}\n        </div>\n        <input\n          type='text'\n          id='number'\n          name='number'\n          placeholder='Enter the number to be searched'\n        />\n        <p id='info'></p>\n      </div>\n    );\n  }\n}\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getLinearSearchAnimations(array, number) {\n  let animations = [];\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === number) {\n      animations.push([i, true]);\n      break;\n    } else {\n      animations.push([i, false]);\n    }\n  }\n  return animations;\n}\n","export function getBinarySearchAnimations(array, number) {\n  let animations1 = [];\n  let min = 0;\n  let max = array.length - 1;\n\n  while (min <= max) {\n    let mid = parseInt(min + (max - min) / 2);\n    if (array[mid] === number) {\n      animations1.push([mid, true]);\n      break;\n    } else if (array[mid] < number) {\n      min = mid + 1;\n      animations1.push([mid, false]);\n    } else {\n      max = mid - 1;\n      animations1.push([mid, false]);\n    }\n  }\n  return animations1;\n}\n","import React, { Component } from \"react\";\nimport SearchingVisualizer from \"../Visualizer/SearchingVisualizer\";\n\nclass SearchingAlgorithmVisualizer extends Component {\n  render() {\n    return <SearchingVisualizer />;\n  }\n}\n\nexport default SearchingAlgorithmVisualizer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/home.css\";\n//import \"../styles/bootstrap.min.css\";\nclass MainPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='header-main'>\n          <h1>Welcome to the Algorithm Visualizer</h1>\n          <span>\n            <a href='https://github.com/ibrahimkamal7/AlgorithmVisualizer'>\n              <i className='fa fa-github' style={{ fontSize: \"36px\" }}></i>\n            </a>\n          </span>\n        </div>\n\n        <div className='index'>\n          <table>\n            <tr>\n              <th>Components</th>\n              <th>Algorithms Implemented</th>\n              <th>How to use</th>\n              <th>Links</th>\n            </tr>\n            <tr>\n              <td>Sorting Visualizer</td>\n              <td>Bubble Sort, Heap Sort, Merge Sort, Quick Sort</td>\n              <td>\n                <a href='https://github.com/ibrahimkamal7/AlgorithmVisualizer'>\n                  Link to the README file\n                </a>\n              </td>\n              <td>\n                <Link to='/sorting-algorithm-visualizer'>\n                  Visualize Sorting Algorithms\n                </Link>\n              </td>\n            </tr>\n\n            <tr>\n              <td>Searching Visualizer</td>\n              <td>Linear Search and Binary Search</td>\n              <td>\n                <a href='https://github.com/ibrahimkamal7/AlgorithmVisualizer'>\n                  Link to the README file\n                </a>\n              </td>\n              <td>\n                <Link to='/seaching-algorithm-visualizer'>\n                  Visualize Searching Algorithms\n                </Link>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\n\nclass Error extends Component {\n  render() {\n    return (\n      <div>\n        <h1>404 Not Found</h1>\n      </div>\n    );\n  }\n}\n\nexport default Error;\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport SortingAlgorithmVisualizer from \"./Endpoints/SortingAlgoritmVisualizer\";\nimport SearchingAlgorithmVisualizer from \"./Endpoints/SearchingAlgorithmVisualizer\";\nimport MainPage from \"./Endpoints/index.jsx\";\nimport Error from \"./Endpoints/error.jsx\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={MainPage} />\n          <Route\n            exact\n            path='/sorting-algorithm-visualizer'\n            component={SortingAlgorithmVisualizer}\n          />\n          <Route\n            exact\n            path='/seaching-algorithm-visualizer'\n            component={SearchingAlgorithmVisualizer}\n          />\n          <Route exact path='/404' component={Error} />\n          <Redirect to='/404' />\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}