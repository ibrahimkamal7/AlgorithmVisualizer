{"version":3,"sources":["Algorithms/SortingAlgorithms/QuickSort.js","Algorithms/SortingAlgorithms/MergeSort.js","Algorithms/SortingAlgorithms/HeapSort.js","Visualizer/Sorting.jsx","Algorithms/SortingAlgorithms/BubbleSort.js","Endpoints/SortingAlgoritmVisualizer.jsx","Visualizer/Searching.jsx","Algorithms/SearchingAlgorithms/LinearSearch.js","Algorithms/SearchingAlgorithms/BinarySearch.js","Endpoints/SearchingAlgorithmVisualizer.jsx","Endpoints/index.jsx","Endpoints/error.jsx","App.js","serviceWorker.js","index.js"],"names":["getQuickSortAnimations","array","animations","doQuickSort","start","end","pivotIdx","pivotValue","lower","run","push","temp","partition","length","getMergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","doMerge","getHeapSortAnimations","heap","swap","doHeapSort","index","left","right","max","first","last","randomIntFromInterval","min","random","SortingVisualizer","props","useState","setLength","value","initialArray","setInitialArray","sliderDisabled","setsliderDisabled","buttonDisabled","setButtonDisabled","mergeChecked","setmergeChecked","quickChecked","setquickChecked","heapChecked","setheapChecked","bubbleChecked","setbubbleChecked","mergeDisabled","setmergeDisabled","quickDisabled","setquickDisabled","heapDisabled","setheapDisabled","bubbleDisabled","setbubbleDisabled","color","setColor","isSorted","setIsSorted","createNewArray","arrayBars","document","getElementsByClassName","style","backgroundColor","disableButtons","change","event","target","id","checkedM","checkedB","checkedH","areSorted","className","Grid","container","spacing","item","xs","Button","variant","onClick","disabled","Slider","onChange","aria-labelledby","FormGroup","row","FormControlLabel","control","Checkbox","checked","label","alert","animationsArray","doBubbleSort","getBubbleSortAnimations","barOne","barTwo","setTimeout","height","bubbleSort","mergeSort","quickSort","heapSort","map","idx","key","width","display","SortingAlgorithmVisualizer","Sorting","SearchingVisualizer","sort","a","b","console","log","getElementById","enableButtons","number","getLinearSearchAnimations","parseInt","x","z","animations1","mid","getBinarySearchAnimations","y","margin","textAlign","marginTop","type","name","placeholder","SearchingAlgorithmVisualizer","Searching","StyledTableCell","withStyles","theme","head","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","MainPage","TableContainer","Table","TableHead","align","TableBody","component","scope","href","to","Error","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dfaab724.chunk.js","sourcesContent":["export function getQuickSortAnimations(array) {\n  const animations = [];\n  let start = 0;\n  let end = array.length - 1;\n  doQuickSort(array, start, end, animations);\n  return animations;\n}\n\nfunction doQuickSort(array, start, end, animations) {\n  if (start >= end) {\n    return;\n  }\n  let pivotIdx = partition(array, start, end, animations);\n  doQuickSort(array, start, pivotIdx - 1, animations);\n  doQuickSort(array, pivotIdx + 1, end, animations);\n}\n\nfunction partition(array, start, end, animations) {\n  let pivotValue = array[start];\n  let lower = start + 1;\n  let run = true;\n  while (run) {\n    while (array[lower] <= pivotValue && lower <= end) {\n      animations.push([start, lower]);\n      animations.push([start, lower]);\n      animations.push([0, array[0]]);\n      animations.push([0, array[0]]);\n      lower += 1;\n    }\n    while (array[end] >= pivotValue && lower <= end) {\n      animations.push([start, end]);\n      animations.push([start, end]);\n      animations.push([0, array[0]]);\n      animations.push([0, array[0]]);\n      end -= 1;\n    }\n    if (end < lower) {\n      run = false;\n    } else {\n      animations.push([lower, end]);\n      animations.push([lower, end]);\n      animations.push([lower, array[end]]);\n      animations.push([end, array[lower]]);\n      let temp = array[lower];\n      array[lower] = array[end];\n      array[end] = temp;\n    }\n  }\n  animations.push([start, end]);\n  animations.push([start, end]);\n  animations.push([start, array[end]]);\n  animations.push([end, pivotValue]);\n  let temp = array[end];\n  array[end] = pivotValue;\n  array[start] = temp;\n  return end;\n}\n","export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","export function getHeapSortAnimations(array) {\n  const animations = [];\n  doHeapSort(array, animations);\n  return animations;\n}\n\nfunction doHeapSort(array, animations) {\n  var length = array.length;\n  for (var i = Math.floor(length / 2); i >= 0; i--) {\n    heap(array, i, length, animations);\n  }\n\n  for (i = length - 1; i > 0; i--) {\n    swap(array, 0, i, animations);\n    length--;\n    heap(array, 0, length, animations);\n  }\n}\n\nfunction heap(array, index, length, animations) {\n  var left = 2 * index + 1;\n  var right = 2 * index + 2;\n  var max = index;\n  if (left < length && array[left] > array[max]) {\n    animations.push([left, max]);\n    animations.push([left, max]);\n    animations.push([0, array[0]]);\n    animations.push([0, array[0]]);\n    max = left;\n  }\n  if (right < length && array[right] > array[max]) {\n    animations.push([right, max]);\n    animations.push([right, max]);\n    animations.push([0, array[0]]);\n    animations.push([0, array[0]]);\n    max = right;\n  }\n  if (max !== index) {\n    swap(array, index, max, animations);\n    heap(array, max, length, animations);\n  }\n}\n\nfunction swap(array, first, last, animations) {\n  animations.push([first, last]);\n  animations.push([first, last]);\n  animations.push([first, array[last]]);\n  animations.push([last, array[first]]);\n  var temp = array[first];\n  array[first] = array[last];\n  array[last] = temp;\n}\n","import React from \"react\";\nimport \"../styles/SortingVisualizer.css\";\nimport { getBubbleSortAnimations } from \"../Algorithms/SortingAlgorithms/BubbleSort.js\";\nimport { getQuickSortAnimations } from \"../Algorithms/SortingAlgorithms/QuickSort.js\";\nimport { getMergeSortAnimations } from \"../Algorithms/SortingAlgorithms/MergeSort.js\";\nimport { getHeapSortAnimations } from \"../Algorithms/SortingAlgorithms/HeapSort.js\";\nimport { useState } from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst initialColor = \"#003DA9\";\nconst compareColor = \"salmon\";\nconst sortedColor = \"turquoise\";\n\nconst speed = 5;\n\nfunction SortingVisualizer(props) {\n  const [length, setLength] = useState(38);\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    const value = randomIntFromInterval(5, 400);\n    array.push(value);\n  }\n  const [initialArray, setInitialArray] = useState(array);\n\n  const [sliderDisabled, setsliderDisabled] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n\n  const [mergeChecked, setmergeChecked] = useState(false);\n  const [quickChecked, setquickChecked] = useState(false);\n  const [heapChecked, setheapChecked] = useState(false);\n  const [bubbleChecked, setbubbleChecked] = useState(false);\n\n  const [mergeDisabled, setmergeDisabled] = useState(false);\n  const [quickDisabled, setquickDisabled] = useState(false);\n  const [heapDisabled, setheapDisabled] = useState(false);\n  const [bubbleDisabled, setbubbleDisabled] = useState(false);\n  const [color, setColor] = useState(initialColor);\n\n  const [isSorted, setIsSorted] = useState(false);\n  const createNewArray = () => {\n    let array = [];\n    for (let i = 0; i < length; i++) {\n      const value = randomIntFromInterval(5, 400);\n      array.push(value);\n    }\n    setInitialArray(array);\n    setColor(initialColor);\n    const arrayBars = document.getElementsByClassName(\"bars\");\n    for (var i = 0; i < arrayBars.length; i++)\n      arrayBars[i].style.backgroundColor = initialColor;\n    setIsSorted(false);\n  };\n\n  const disableButtons = () => {\n    setButtonDisabled(true);\n    setsliderDisabled(true);\n    setmergeDisabled(true);\n    setquickDisabled(true);\n    setheapDisabled(true);\n    setbubbleDisabled(true);\n  };\n\n  const enableButtons = () => {\n    setButtonDisabled(false);\n    setsliderDisabled(false);\n    setmergeChecked(false);\n    setbubbleChecked(false);\n    setquickChecked(false);\n    setheapChecked(false);\n    setmergeDisabled(false);\n    setquickDisabled(false);\n    setheapDisabled(false);\n    setbubbleDisabled(false);\n  };\n\n  const change = (event) => {\n    if (event.target.id === \"merge\") {\n      let checkedM = false;\n      if (mergeChecked) {\n        checkedM = false;\n      } else {\n        checkedM = true;\n      }\n      setmergeChecked(checkedM);\n      setquickDisabled(checkedM);\n      setheapDisabled(checkedM);\n      setbubbleDisabled(checkedM);\n    } else if (event.target.id === \"bubble\") {\n      let checkedB = false;\n      if (bubbleChecked) {\n        checkedB = false;\n      } else {\n        checkedB = true;\n      }\n      setbubbleChecked(checkedB);\n      setmergeDisabled(checkedB);\n      setquickDisabled(checkedB);\n      setheapDisabled(checkedB);\n    } else if (event.target.id === \"heap\") {\n      let checkedH = false;\n      if (heapChecked) {\n        checkedH = false;\n      } else {\n        checkedH = true;\n      }\n      setheapChecked(checkedH);\n      setmergeDisabled(checkedH);\n      setquickDisabled(checkedH);\n      setbubbleDisabled(checkedH);\n    } else {\n      let checkedM = false;\n      if (quickChecked) {\n        checkedM = false;\n      } else {\n        checkedM = true;\n      }\n      setquickChecked(checkedM);\n      setmergeDisabled(checkedM);\n      setheapDisabled(checkedM);\n      setbubbleDisabled(checkedM);\n    }\n  };\n\n  const changeSize = (event, value) => {\n    setLength(value);\n    createNewArray();\n  };\n\n  const areSorted = () => {\n    var arrayBars = document.getElementsByClassName(\"bars\");\n    for (var i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.backgroundColor = sortedColor;\n    }\n    enableButtons();\n    setIsSorted(true);\n  };\n\n  const bubbleSort = () => {\n    disableButtons();\n    const array = initialArray.slice();\n    const arrayBars = document.getElementsByClassName(\"bars\");\n    const animations = getBubbleSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color = i % 4 === 0 ? compareColor : initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * speed);\n      } else {\n        const [barOne, height] = animations[i];\n        setTimeout(() => {\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            areSorted();\n          }\n        }, i * speed);\n      }\n    }\n  };\n\n  const heapSort = () => {\n    disableButtons();\n    const array = initialArray.slice();\n    const arrayBars = document.getElementsByClassName(\"bars\");\n    const animations = getHeapSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color = i % 4 === 0 ? compareColor : initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * speed);\n      } else {\n        setTimeout(() => {\n          const [barOne, height] = animations[i];\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            areSorted();\n          }\n        }, i * speed);\n      }\n    }\n  };\n\n  const mergeSort = () => {\n    disableButtons();\n    const array = initialArray.slice();\n    const arrayBars = document.getElementsByClassName(\"bars\");\n    const animations = getMergeSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 3 !== 2;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color = i % 3 === 0 ? compareColor : initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * speed);\n      } else {\n        setTimeout(() => {\n          const [barOne, height] = animations[i];\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            areSorted();\n          }\n        }, i * speed);\n      }\n    }\n  };\n\n  const quickSort = () => {\n    disableButtons();\n    const array = initialArray.slice();\n    var arrayBars = document.getElementsByClassName(\"bars\");\n    const animations = getQuickSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      if (colorChange) {\n        const [barOne, barTwo] = animations[i];\n        const color = i % 4 === 0 ? compareColor : initialColor;\n        setTimeout(() => {\n          arrayBars[barOne].style.backgroundColor = color;\n          arrayBars[barTwo].style.backgroundColor = color;\n        }, i * speed);\n      } else {\n        setTimeout(() => {\n          const [barOne, height] = animations[i];\n          arrayBars[barOne].style.height = `${height}px`;\n          if (i === animations.length - 1) {\n            areSorted();\n          }\n        }, i * speed);\n      }\n    }\n  };\n\n  const go = () => {\n    var checked = \"\";\n    if (mergeChecked) checked = \"merge\";\n    else if (quickChecked) checked = \"quick\";\n    else if (heapChecked) checked = \"heap\";\n    else if (bubbleChecked) checked = \"bubble\";\n\n    if (checked === \"\") {\n      alert(\"Please select atleast sorting algorithms\");\n    } else {\n      if (isSorted) {\n        alert(\"Array is sorted. Generate a new and try again.\");\n      } else {\n        if (checked === \"bubble\") {\n          bubbleSort();\n        } else if (checked === \"merge\") {\n          mergeSort();\n        } else if (checked === \"quick\") {\n          quickSort();\n        } else {\n          heapSort();\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className=\"header\"\n      style={{\n        backgroundColor: \"#003DA9\",\n      }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            id=\"generate\"\n            onClick={createNewArray}\n            disabled={buttonDisabled}\n          >\n            Generate New Array\n          </Button>\n        </Grid>\n        <p id=\"continuous-slider\">Size</p>\n        <Grid item xs={3}>\n          <Slider\n            min={20}\n            max={130}\n            value={length}\n            onChange={changeSize}\n            id=\"length\"\n            aria-labelledby=\"continuous-slider\"\n            disabled={sliderDisabled}\n          />\n        </Grid>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={change}\n                color=\"secondary\"\n                id=\"merge\"\n                disabled={mergeDisabled}\n                checked={mergeChecked}\n              />\n            }\n            label=\"Merge Sort\"\n          />\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={change}\n                color=\"secondary\"\n                id=\"quick\"\n                disabled={quickDisabled}\n                checked={quickChecked}\n              />\n            }\n            label=\"Quick Sort\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={change}\n                color=\"secondary\"\n                id=\"heap\"\n                disabled={heapDisabled}\n                checked={heapChecked}\n              />\n            }\n            label=\"Heap Sort\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={change}\n                color=\"secondary\"\n                id=\"bubble\"\n                disabled={bubbleDisabled}\n                checked={bubbleChecked}\n              />\n            }\n            label=\"Bubble Sort\"\n          />\n        </FormGroup>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            id=\"go\"\n            onClick={go}\n            disabled={buttonDisabled}\n          >\n            Visualize Algorithms\n          </Button>\n        </Grid>\n      </Grid>\n      <div className=\"container\">\n        {initialArray.map((value, idx) => (\n          <div\n            className=\"bars\"\n            id={value}\n            key={idx}\n            style={{\n              backgroundColor: color,\n              height: `${value}px`,\n              width: \"5px\",\n              display: \"inline-block\",\n            }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SortingVisualizer;\n","export function getBubbleSortAnimations(array) {\n  const animationsArray = [];\n  doBubbleSort(array, animationsArray);\n  return animationsArray;\n}\n\nfunction doBubbleSort(array, animationsArray) {\n  let end = array.length - 1;\n  while (end >= 1) {\n    for (let j = 0; j < end; j++) {\n      if (array[j] > array[j + 1]) {\n        animationsArray.push([j, j + 1]);\n        animationsArray.push([j, j + 1]);\n        animationsArray.push([j, array[j + 1]]);\n        animationsArray.push([j + 1, array[j]]);\n        let temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n    end--;\n  }\n}\n","import React from \"react\";\nimport SortingVisualizer from \"../Visualizer/Sorting\";\n\nfunction SortingAlgorithmVisualizer() {\n  return <SortingVisualizer />;\n}\n\nexport default SortingAlgorithmVisualizer;\n","import React from \"react\";\nimport { getLinearSearchAnimations } from \"../Algorithms/SearchingAlgorithms/LinearSearch.js\";\nimport { getBinarySearchAnimations } from \"../Algorithms/SearchingAlgorithms/BinarySearch.js\";\nimport { useState } from \"react\";\nimport \"../styles/SearchingVisualizer.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction SearchingVisualizer() {\n  const initialColor = \"#003DA9\";\n  const comparisonColor = \"salmon\";\n  const foundColor = \"turquoise\";\n  const speed = 500;\n  const [length, setLength] = useState(15);\n  const array = [];\n  for (let i = 0; i < length; i++) {\n    const value = randomIntFromInterval(5, 400);\n    array.push(value);\n    array.sort((a, b) => a - b);\n    console.log(array);\n  }\n  const [initialArray, setInitialArray] = useState(array);\n\n  const [sliderDisabled, setsliderDisabled] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n\n  const disableButtons = () => {\n    setsliderDisabled(true);\n    setButtonDisabled(true);\n    document.getElementById(\"number\").disabled = true;\n  };\n\n  const enableButtons = () => {\n    setsliderDisabled(false);\n    setButtonDisabled(false);\n    document.getElementById(\"number\").disabled = false;\n  };\n\n  const createNewArray = () => {\n    const array = [];\n    for (let i = 0; i < length; i++) {\n      const value = randomIntFromInterval(5, 400);\n      array.push(value);\n    }\n    array.sort((a, b) => a - b);\n    setInitialArray(array);\n    var arrayBars = document.getElementsByClassName(\"bars\");\n    for (var i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.backgroundColor = initialColor;\n    }\n  };\n\n  const linearSearch = () => {\n    const number = document.getElementById(\"number\").value;\n    if (number === \"\") {\n      alert(\"Please enter a number to be searched\");\n    } else {\n      disableButtons();\n      const arrayBars = document.getElementsByClassName(\"bars\");\n      for (var i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = initialColor;\n      }\n      const animations = getLinearSearchAnimations(\n        initialArray,\n        parseInt(number)\n      );\n      for (let i = 0; i < animations.length; i++) {\n        const [idx, found] = animations[i];\n        if (found) {\n          setTimeout(() => {\n            for (var x = 0; x < arrayBars.length; x++) {\n              if (x !== idx) arrayBars[x].style.backgroundColor = initialColor;\n            }\n            arrayBars[idx].style.backgroundColor = foundColor;\n            enableButtons();\n          }, i * speed);\n          break;\n        } else {\n          setTimeout(() => {\n            arrayBars[idx].style.backgroundColor = comparisonColor;\n            if (i === animations.length - 1) {\n              for (var z = 0; z < arrayBars.length; z++) {\n                arrayBars[z].style.backgroundColor = initialColor;\n              }\n              enableButtons();\n            }\n          }, i * speed);\n        }\n      }\n    }\n  };\n\n  const binarySearch = () => {\n    const number = document.getElementById(\"number\").value;\n    if (number === \"\") {\n      alert(\"Please enter a number to be searched\");\n    } else {\n      disableButtons();\n      const arrayBars = document.getElementsByClassName(\"bars\");\n      for (var i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = initialColor;\n      }\n      const animations = getBinarySearchAnimations(\n        initialArray,\n        parseInt(number)\n      );\n      for (let i = 0; i < animations.length; i++) {\n        const [idx, found] = animations[i];\n        if (found) {\n          setTimeout(() => {\n            for (var x = 0; x < arrayBars.length; x++) {\n              if (x !== idx) arrayBars[x].style.backgroundColor = initialColor;\n            }\n            arrayBars[idx].style.backgroundColor = foundColor;\n            enableButtons();\n          }, i * speed);\n          break;\n        } else {\n          setTimeout(() => {\n            arrayBars[idx].style.backgroundColor = comparisonColor;\n            if (i === animations.length - 1) {\n              for (var y = 0; y < arrayBars.length; y++) {\n                arrayBars[y].style.backgroundColor = initialColor;\n              }\n              enableButtons();\n            }\n          }, i * speed);\n        }\n      }\n    }\n  };\n\n  const changeSize = (event, value) => {\n    setLength(value);\n    createNewArray();\n  };\n\n  return (\n    <div>\n      <div\n        className=\"header\"\n        style={{\n          backgroundColor: \"#003DA9\",\n        }}\n      >\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"generate\"\n              onClick={createNewArray}\n              disabled={buttonDisabled}\n            >\n              Generate New Array\n            </Button>\n          </Grid>\n          <Grid item xs={3}>\n            <p id=\"size-text\">Size</p>\n            <Slider\n              min={10}\n              max={25}\n              value={length}\n              onChange={changeSize}\n              id=\"size\"\n              aria-labelledby=\"continuous-slider\"\n              disabled={sliderDisabled}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"LinearSearch\"\n              onClick={linearSearch}\n              disabled={buttonDisabled}\n            >\n              Linear Search\n            </Button>\n          </Grid>\n          <Grid item xs={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"BinarySearch\"\n              onClick={binarySearch}\n              disabled={buttonDisabled}\n            >\n              Binary Search\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n      <div className=\"containers\">\n        {initialArray.map((value, idx) => (\n          <div\n            className=\"bars\"\n            id={value}\n            key={idx}\n            style={{\n              backgroundColor: initialColor,\n              color: \"white\",\n              height: \"50px\",\n              width: \"50px\",\n              display: \"inline-block\",\n              margin: \"0 1px\",\n              textAlign: \"center\",\n            }}\n          >\n            <p className=\"value\" style={{ marginTop: \"15px\" }}>\n              {value}\n            </p>\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        id=\"number\"\n        name=\"number\"\n        placeholder=\"Enter the number to be searched\"\n      />\n    </div>\n  );\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SearchingVisualizer;\n","export function getLinearSearchAnimations(array, number) {\n  let animations = [];\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === number) {\n      animations.push([i, true]);\n      break;\n    } else {\n      animations.push([i, false]);\n    }\n  }\n  return animations;\n}\n","export function getBinarySearchAnimations(array, number) {\n  let animations1 = [];\n  let min = 0;\n  let max = array.length - 1;\n\n  while (min <= max) {\n    let mid = parseInt(min + (max - min) / 2);\n    if (array[mid] === number) {\n      animations1.push([mid, true]);\n      break;\n    } else if (array[mid] < number) {\n      min = mid + 1;\n      animations1.push([mid, false]);\n    } else {\n      max = mid - 1;\n      animations1.push([mid, false]);\n    }\n  }\n  return animations1;\n}\n","import React from \"react\";\nimport SearchingVisualizer from \"../Visualizer/Searching\";\n\nfunction SearchingAlgorithmVisualizer() {\n  return <SearchingVisualizer />;\n}\n\nexport default SearchingAlgorithmVisualizer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"../styles/home.css\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction MainPage() {\n  return (\n    <div>\n      <div className=\"header-main\" id=\"welcome\">\n        <h1>Welcome to the Algorithm Visualizer</h1>\n      </div>\n\n      <div className=\"index\">\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Components</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  Algorithms Implemented\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">How to Use</StyledTableCell>\n                <StyledTableCell align=\"right\">Links</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <StyledTableRow key={1}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  Sorting Visualizer\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  Bubble Sort, Heap Sort, Merge Sort, Quick Sort\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <a href=\"https://github.com/ibrahimkamal7/AlgorithmVisualizer/blob/master/README.md\">\n                    Link to the README file\n                  </a>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {\" \"}\n                  <Link to=\"/sorting-algorithm-visualizer\">\n                    Visualize Sorting Algorithms\n                  </Link>\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow key={1}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  Searching Visualizer\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  Linear Search and Binary Search\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <a href=\"https://github.com/ibrahimkamal7/AlgorithmVisualizer/blob/master/README.md\">\n                    Link to the README file\n                  </a>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link to=\"/seaching-algorithm-visualizer\">\n                    Visualize Searching Algorithms\n                  </Link>\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <div id=\"source\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            href=\"https://github.com/ibrahimkamal7/AlgorithmVisualizer\"\n          >\n            View the source code\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import React from \"react\";\n\nfunction Error() {\n  return (\n    <div>\n      <h1>404 Not Found</h1>\n    </div>\n  );\n}\n\nexport default Error;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport SortingAlgorithmVisualizer from \"./Endpoints/SortingAlgoritmVisualizer\";\nimport SearchingAlgorithmVisualizer from \"./Endpoints/SearchingAlgorithmVisualizer\";\nimport MainPage from \"./Endpoints/index.jsx\";\nimport Error from \"./Endpoints/error.jsx\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route\n          exact\n          path=\"/sorting-algorithm-visualizer\"\n          component={SortingAlgorithmVisualizer}\n        />\n        <Route\n          exact\n          path=\"/seaching-algorithm-visualizer\"\n          component={SearchingAlgorithmVisualizer}\n        />\n        <Route exact path=\"/404\" component={Error} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}